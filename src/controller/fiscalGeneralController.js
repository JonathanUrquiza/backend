// Controlador de autenticaci√≥n para fiscales generales
const { Fiscal } = require('../model/index');
const bcrypt = require('bcrypt');

// Mostrar p√°gina de login de fiscal general
const showFiscalGeneralLogin = (req, res) => {
    res.render("fiscal-general/login", {
        view: {
            title: "Login Fiscal General - Sistema de Fiscalizaci√≥n",
            description: "Acceso exclusivo para fiscales generales del sistema",
            keywords: "fiscal general, login, autenticaci√≥n",
            author: "Sistema Monolito",
            year: new Date().getFullYear()
        }
    });
};

// Procesar login de fiscal general
const processFiscalGeneralLogin = async (req, res) => {
    const timestamp = new Date().toISOString();
    const { sequelize } = require('../config/database');
    
    try {
        const { email, password } = req.body;

        console.log('\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
        console.log('üîê INTENTO DE LOGIN - FISCAL GENERAL');
        console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
        console.log(`‚è∞ Timestamp: ${timestamp}`);
        console.log(`üìß Email: ${email || 'NO PROPORCIONADO'}`);
        console.log(`üîë Password: ${password ? '***' + '*'.repeat(password.length - 3) : 'NO PROPORCIONADO'}`);
        console.log(`üåê IP: ${req.ip || req.connection.remoteAddress}`);
        
        // Verificar estado de conexi√≥n a la base de datos
        try {
            await sequelize.authenticate();
            console.log('‚úÖ Estado BD: Conexi√≥n activa y funcionando');
        } catch (dbError) {
            console.log('‚ùå Estado BD: Error de conexi√≥n');
            console.log(`   Error: ${dbError.message}`);
            return res.status(503).json({
                success: false,
                message: 'Error de conexi√≥n con la base de datos'
            });
        }
        console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');

        if (!email || !password) {
            console.log('‚ùå LOGIN FALLIDO - Fiscal General: Campos incompletos\n');
            return res.status(400).json({
                success: false,
                message: 'Email y contrase√±a son requeridos'
            });
        }

        // Buscar fiscal general
        const fiscalGeneral = await Fiscal.findOne({
            where: { 
                email: email.trim().toLowerCase(),
                tipo: 'fiscal_general' // Solo fiscales generales
            }
        });

        if (!fiscalGeneral) {
            console.log(`‚ùå LOGIN FALLIDO - Fiscal General no encontrado o sin permisos: ${email}`);
            console.log(`üîç Credenciales: INV√ÅLIDAS (usuario no existe o no es fiscal general)\n`);
            return res.status(401).json({
                success: false,
                message: 'Credenciales incorrectas o no tienes permisos de fiscal general'
            });
        }

        console.log(`üîç Usuario encontrado en BD: ${fiscalGeneral.nombre} (ID: ${fiscalGeneral.id})`);
        console.log(`üîç Tipo de usuario: ${fiscalGeneral.tipo}`);
        console.log(`üîç Verificando credenciales...`);

        // Verificar contrase√±a hasheada
        const passwordMatch = await bcrypt.compare(password, fiscalGeneral.password);
        if (!passwordMatch) {
            console.log(`‚ùå LOGIN FALLIDO - Contrase√±a incorrecta para: ${fiscalGeneral.nombre} (${fiscalGeneral.email})`);
            console.log(`üîç Credenciales: INV√ÅLIDAS (contrase√±a incorrecta)\n`);
            return res.status(401).json({
                success: false,
                message: 'Credenciales incorrectas'
            });
        }

        console.log(`‚úÖ Credenciales: V√ÅLIDAS`);

        // Crear sesi√≥n de fiscal general
        req.session.fiscalGeneralId = fiscalGeneral.id;
        req.session.fiscalGeneralEmail = fiscalGeneral.email;
        req.session.fiscalGeneralNombre = fiscalGeneral.nombre;
        req.session.fiscalGeneralTipo = fiscalGeneral.tipo;
        req.session.fiscalGeneralZona = fiscalGeneral.zona;
        req.session.fiscalGeneralInstitucion = fiscalGeneral.institucion;

        // Guardar la sesi√≥n antes de enviar la respuesta
        req.session.save((err) => {
            if (err) {
                console.error('‚ùå Error guardando sesi√≥n:', err);
                return res.status(500).json({
                    success: false,
                    message: 'Error al guardar la sesi√≥n'
                });
            }

            console.log('‚úÖ LOGIN EXITOSO - FISCAL GENERAL');
            console.log(`üë§ Nombre: ${fiscalGeneral.nombre}`);
            console.log(`üìß Email: ${fiscalGeneral.email}`);
            console.log(`üèõÔ∏è Instituci√≥n: ${fiscalGeneral.institucion || 'Sin asignar'}`);
            console.log(`üìç Zona: ${fiscalGeneral.zona || 'Sin asignar'}`);
            console.log(`üÜî ID: ${fiscalGeneral.id}`);
            console.log(`‚≠ê Tipo: FISCAL GENERAL`);
            console.log(`üíæ Sesi√≥n guardada correctamente\n`);

            res.json({
                success: true,
                message: 'Login de fiscal general exitoso',
                redirect: '/fiscal-general/dashboard'
            });
        });

    } catch (error) {
        console.error('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
        console.error('‚ùå ERROR EN LOGIN DE FISCAL GENERAL');
        console.error('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
        console.error(`‚è∞ Timestamp: ${timestamp}`);
        console.error(`‚ùå Error: ${error.message}`);
        console.error(`üìö Stack: ${error.stack}`);
        console.error('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');
        res.status(500).json({
            success: false,
            message: 'Error interno del servidor'
        });
    }
};

// Mostrar dashboard de fiscal general
const showFiscalGeneralDashboard = async (req, res) => {
    try {
        // Obtener estad√≠sticas completas
        const totalFiscales = await Fiscal.count();
        const fiscalesGenerales = await Fiscal.count({ where: { tipo: 'fiscal_general' } });
        const fiscalesZona = await Fiscal.count({ where: { tipo: 'fiscal_zona' } });
        const fiscalesRegulares = await Fiscal.count({ where: { tipo: 'fiscal' } });

        // Estad√≠sticas por zona
        const fiscalesPorZona = {};
        for (let zona = 1; zona <= 15; zona++) {
            const count = await Fiscal.count({ where: { zona: zona } });
            fiscalesPorZona[zona] = count;
        }

        res.render("fiscal-general/dashboard", {
            view: {
                title: "Dashboard Fiscal General - Sistema de Fiscalizaci√≥n",
                description: "Panel de control para fiscales generales",
                keywords: "fiscal general, dashboard, panel, administraci√≥n",
                author: "Sistema Monolito",
                year: new Date().getFullYear()
            },
            fiscalGeneral: {
                id: req.session.fiscalGeneralId,
                nombre: req.session.fiscalGeneralNombre,
                email: req.session.fiscalGeneralEmail,
                zona: req.session.fiscalGeneralZona,
                institucion: req.session.fiscalGeneralInstitucion
            },
            stats: {
                totalFiscales,
                fiscalesGenerales,
                fiscalesZona,
                fiscalesRegulares,
                fiscalesPorZona
            }
        });
    } catch (error) {
        console.error('Error en dashboard de fiscal general:', error);
        res.status(500).render('error', {
            view: {
                title: "Error - Sistema",
                description: "Error interno",
                keywords: "error",
                author: "Sistema Monolito", 
                year: new Date().getFullYear()
            },
            error: "Error al cargar el dashboard"
        });
    }
};

// Logout de fiscal general
const fiscalGeneralLogout = (req, res) => {
    const fiscalGeneralNombre = req.session.fiscalGeneralNombre;
    
    req.session.destroy((err) => {
        if (err) {
            console.error('Error al cerrar sesi√≥n de fiscal general:', err);
            return res.status(500).json({ 
                success: false, 
                message: 'Error al cerrar sesi√≥n' 
            });
        }
        
        console.log(`üö™ Fiscal general logout: ${fiscalGeneralNombre || 'Desconocido'}`);
        res.redirect('/fiscal-general/login');
    });
};

// Middleware de autenticaci√≥n para fiscales generales
const requireFiscalGeneralAuth = (req, res, next) => {
    if (req.session && req.session.fiscalGeneralId) {
        return next();
    } else {
        return res.redirect('/fiscal-general/login');
    }
};

module.exports = {
    showFiscalGeneralLogin,
    processFiscalGeneralLogin,
    showFiscalGeneralDashboard,
    fiscalGeneralLogout,
    requireFiscalGeneralAuth
};
